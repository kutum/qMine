@model qMIne.Models.StatusViewModel
@{
    ViewBag.Title = "qMine Console";
}

<div class="row content container-fluid" style="padding-top:10px">
    <div class="col-lg-8 console">

        <div class="card mb-3">
            <div class="card-header">
                <h6 class="card-title">RCON Console</h6>
            </div>
            <div id="console" class="card-body">
                <ul id="ulconsole" class="list-group" style="height: 300px; overflow: auto;"></ul>
            </div>
        </div>


        <div class="input-group mb-3">

            <div class="input-group-prepend">
                <span class="input-group-text">type:</span>
            </div>

            <input type="text" id="commandRcon" class="form-control" />
            <div class="input-group-btn">
                <button type="button" class="btn btn-outline-dark" tabindex="-1" id="sendRcon"><span class="fas fa-arrow-right"></span> Send</button>
            </div>
        </div>

        <div class="checkbox card mb-3" style="display:inline-block; width:100%">

            <label style="padding-top: 1%;padding-left:10px">
                <input type="checkbox" id="chkAutoScroll" checked="checked"> Auto scroll
            </label>
            <button type="button" class="btn btn-outline-dark" tabindex="0" id="btnClearLog" style="float:right;"><span class="far fa-trash-alt"></span> Clear</button>
        </div>

    </div>


    <div class="col">
        <div class="card">
            <div class="card-header">


                @if (Model.MineStat.ServerUp)
                {
                    <img class="d-inline" id="redstoneLamp" src="~/Content/img/lamp_online.png" />
                    <h6 class="card-title d-inline" id="Online"> Online</h6>
                }
                else
                {
                    <img class="d-inline" src="~/Content/img/lamp_offline.png" />
                    <h6 class="card-title d-inline" id="Online">Offline</h6>
                }

            </div>
            <div class="card-body">

                    <h5>@ViewData["Error"]</h5>
                    <div class="input-group">
                        @Html.LabelFor(x => x.MineStat.Address, new { @class = "input-group-text control-label font-weight-bold" })
                        <span class="input-group-text" id="Address">@Model.MineStat.Address : @Model.MineStat.Port</span>
                    </div>

                    <div class="input-group">
                        @Html.LabelFor(x => x.MineStat.Version, new { @class = "input-group-text control-label font-weight-bold" })
                        <span class="input-group-text" id="Version" >@Model.MineStat.Version</span>
                    </div>

                    <div class="input-group">
                        <span class="input-group-text control-label font-weight-bold">Players:</span>
                        <span class="input-group-text" id="Players">@Model.MineStat.CurrentPlayers/@Model.MineStat.MaximumPlayers</span>
                    </div>
                    
            </div>
            @*<div class="card-footer">
                <input type="button" id="refreshStatus" class="btn btn-outline-dark float-xl-right" value="Refresh" />
            </div>*@
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/rconJS")

<script type="text/javascript">

    $("#refreshStatus").click(function () {
        $.ajax({
            url: '@Url.Action("GetStatus","Home")',
            type: 'GET',
            cache: false,
            success: function (Data) {
                refreshItems(Data);
            }
            });
    });
    function refreshItems(Data) {
        document.getElementById('Address').childNodes[0].textContent = Data.Address + " : " + Data.Port;

        if (Data.ServerUp == true) {
            document.getElementById('Online').childNodes[0].textContent = "Online";
            document.getElementById('redstoneLamp').src = "/Content/img/lamp_online.png";
        }
        else {
            document.getElementById('Online').childNodes[0].textContent = "Offline";
            document.getElementById('redstoneLamp').src = "/Content/img/lamp_offline.png";
        }

        document.getElementById('Version').childNodes[0].textContent = Data.Version;
        document.getElementById('Players').childNodes[0].textContent = Data.CurrentPlayers + "/" + Data.MaximumPlayers;
    }



    function refreshStatus() {
         $.ajax({
            url: '@Url.Action("GetStatus","Home")',
            type: 'GET',
            cache: false,
            success: function (Data) {
                refreshItems(Data);
            }
            });
    }

    setInterval(refreshStatus, 5000);
</script>

<script type="text/javascript">
        $(function () {
            $("#sendRcon").click(function () {

                var command = $("#commandRcon").val();
                if (command.length == 0) return;

                if (command != "") { $("#Send").prop('disabled', true); };

                $.ajax({
                    url: '@Url.Action("CallRcon", "Home")',
                    type: 'POST',
                    data: { commandRcon: command },
                    cache: false,

                    success: function (Data) {

                        var datetime = getCurrentTime();
                        datetime += " -> ";
                        datetime += command;

                        $("#ulconsole").append('<li class="list-group-item list-group-item-success">' + datetime + '</li>');
                        clearOldLogs();

                        if (Data.indexOf("Unknown command") != -1) {
                            logError(Data);
                            clearOldLogs();
                            return;
                        }
                        else if (Data.indexOf("Usage") != -1) {
                            logWarning(Data);
                            return;
                        }
                        else if (Data.indexOf("Exception") != -1) {
                            logError(Data);
                            return;
                        }
                        else if (Data.indexOf("Error") != -1) {
                            logError(Data);
                            return;
                        }
                        else
                            logSuccess(Data);
                    }
                }).fail(
                    function () {
                        logError(Data);
                        }
                    );
            });
        });
</script>