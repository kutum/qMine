@model qMine.Models.StatusViewModel

@{
    ViewBag.Title = "qMine | CONSOLE";
}

<div style="padding-top:10px">
    <div class="row">
        <div class="col-lg-8" style="padding:0; ">
            <div class="card border-0" style="width:100%; min-height:300px;">
                <div class="card-header text-white">
                    <img src="~/Content/img/Computer-icon.png" class="d-inline" />
                    <h6 class="card-title d-inline">Console</h6>
                    <label style="padding-top: 1%;padding-left:13px; visibility:hidden">
                        <input type="checkbox" class="custom-checkbox" id="chkAutoScroll" checked="checked"> Auto scroll
                    </label>
                    <button class="btn btn-dark" id="btnClearLog" style="float:right;"><span class="far fa-trash-alt"></span> Clear</button>
                </div>
                <div id="console" class="card-body">
                    <ul id="ulconsole" class="list-group" style="font-size:8pt; height:200px;overflow:auto"></ul>
                </div>
            </div>
            <div class="input-group" >
                <div class="input-group-prepend">
                    <span class="input-group-text">type:</span>
                </div>
                <input type="text" id="commandRcon" class="form-control" />
                <button class="btn btn-dark" tabindex="-1" id="sendRcon"><span id="sendStatus" class="fas fa-arrow-right"></span> Send</button>
            </div>
        </div>
        <div class="col" style="padding:0">
            <div class="card border-0" style="width:100%; min-height:338px">
                <div class="card-header text-light">
                    <img class="d-inline" id="redstoneLamp" src="~/Content/img/lamp_offline.png" />
                    <h6 class="card-title d-inline" style="padding-left:10px" id="Online">Getting status...</h6>
                    @*<button id="refreshStatus" class="btn btn-outline-dark float-xl-right d-inline"><span class=" fas fa-sync"></span></button>*@
                    @if (Model.serverCredentials.SSHLogin == "root")
                    {
                        <button class="btn btn-dark" tabindex="0" id="btnStartStop" style="float:right;"><span id="spbtnStartStop" style="margin-right:10px" class="fas"></span>...</button>
                    }
                    else
                    {
                        <button class="btn btn-dark" disabled tabindex="0" id="btnStartStop" style="float:right;"><span id="spbtnStartStop" style="margin-right:10px" class="fas"></span>...</button>
                    }
                </div>
                <div class="card-body ">

                    <h5>@ViewData["Error"]</h5>
                    <div class="input-group mb-1">
                        @Html.LabelFor(x => x.MineStat.Address, new { @class = "input-group-text control-label font-weight-bold" })
                        <span class="input-group-text " id="Address">@Model.MineStat.Address : @Model.MineStat.Port</span>
                    </div>

                    <div class="input-group mb-1">
                        @Html.LabelFor(x => x.MineStat.Version, new { @class = "input-group-text control-label font-weight-bold" })
                        <span class="input-group-text" id="Version">- @Model.MineStat.Version</span>
                    </div>

                    <div class="input-group">
                        <span class="input-group-text control-label font-weight-bold">Players:</span>
                        <span class="input-group-text" id="Players">@Model.MineStat.CurrentPlayers/@Model.MineStat.MaximumPlayers</span>
                    </div>
                </div>

            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-lg-8" style="padding:0; ">
            <div class="card border-0" style="width:100%; min-height:250px;">
                <div class="card-header text-light">
                    <img src="~/Content/img/150px-Book.png" class="d-inline" />
                    <h6 class="card-title d-inline">Status</h6>

                    <label style="padding-top:1%; padding-left:20px">
                        <input type="checkbox" class="custom-checkbox" id="chkAutoScrollStatus" checked="checked"> Auto scroll
                    </label>
                </div>
                <div class="card-body">
                    <ul class="list-group  list-group-flush" id="StatusText" style="font-size:8pt; max-height:130px; overflow: auto;">
                        <li class="list-group-item">Checking... </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="col" style="padding:0">
            <div class="card border-0" style="width:100%; min-height:250px">
                <div class="card-header text-light">
                    <img src="~/Content/img/Enchanting_Table.png" class="d-inline" />
                    <h6 class="card-title d-inline" style="padding-left:10px">Info</h6>
                </div>
                <div class="card-body" style="font-size:10pt">
                    <a href="http://minecraft.gamepedia.com/Commands" class="list-group-item list-group-item-action list-group-item-info mb-3" style="width:200px">
                        <img src="~/Content/img/Enchanted_Book.gif" style="max-height:32px; padding-right:10px" />  Commands
                    </a>
                    <a href="http://www.minecraftinfo.com/idlist.htm" class="list-group-item list-group-item-action list-group-item-info" style="width:200px">
                        <img src="~/Content/img/Enchanted_Book.gif" style="max-height:32px; padding-right:10px" /> Items ID
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/rconJS")

<script type="text/javascript">

    function getStatus() {

         $.ajax({
            url: '@Url.Action("GetStatus","Home")',
            type: 'GET',
             cache: false,
             data: @Html.Raw(Json.Encode(Model.serverCredentials)),
            success: function (Data) {
                refreshItems(Data);
            }
            });
    }

    function getStatusResult() {

        var result;
         $.ajax({
            url: '@Url.Action("GetStatus", "Home")',
             type: 'GET',
            data: @Html.Raw(Json.Encode(Model.serverCredentials)),
            async: false,
             success: function (Data) {
                 result = Data;
             }
        });
        return result;
        
    }

    $("#refreshStatus").click(function () {
        getStatus();
    });

    function refreshItems(Data) {
        document.getElementById('Address').childNodes[0].textContent = Data.MineStat.Address + " : " + Data.MineStat.Port;

        if (Data.MineStat.ServerUp == true) {
            document.getElementById('Online').childNodes[0].textContent = "Online";
            document.getElementById('redstoneLamp').src = '@Url.Content("~/Content/img/lamp_online.png")';
            document.getElementById('Version').childNodes[0].textContent = Data.MineStat.Version;
            document.getElementById('Players').childNodes[0].textContent = Data.MineStat.CurrentPlayers + "/" + Data.MineStat.MaximumPlayers;

            if ($("#spbtnStartStop").hasClass('fa-play')) {
                $("#spbtnStartStop").removeClass('fa-play');
            }

            if (!$("#spbtnStartStop").hasClass('fa-stop') && !$("#spbtnStartStop").hasClass('fa-spin')) {
                $("#spbtnStartStop").addClass('fa-stop');
            }

            document.getElementById('btnStartStop').childNodes[1].textContent = "Stop";
            $("#Send").prop('disabled', false);

           
        }
        else {

            document.getElementById('Online').childNodes[0].textContent = "Offline";
            document.getElementById('redstoneLamp').src = '@Url.Content("~/Content/img/lamp_offline.png")';
            document.getElementById('Version').childNodes[0].textContent = "-";
            document.getElementById('Players').childNodes[0].textContent = "-/-";

            if ($("#spbtnStartStop").hasClass('fa-stop')) {
                $("#spbtnStartStop").removeClass('fa-stop');
            }

            if (!$("#spbtnStartStop").hasClass('fa-play') && !$("#spbtnStartStop").hasClass('fa-spin')) {
                $("#spbtnStartStop").addClass('fa-play');
            }

            document.getElementById('btnStartStop').childNodes[1].textContent = "Start";
            $("#Send").prop('disabled', true);

        }
        document.getElementById('StatusText').innerHTML = Data.StatusText;

        if ($("#chkAutoScrollStatus").is(':checked')) {
            $("#StatusText").scrollTop($("#StatusText").get(0).scrollHeight);
        }

    }

    function refreshStatus() {
         $.ajax({
            url: '@Url.Action("GetStatus", "Home")',
             type: 'GET',
            data: @Html.Raw(Json.Encode(Model.serverCredentials)),
            cache: false,
            success: function (Data) {
                refreshItems(Data);
            }
        });
    }

    setInterval(refreshStatus,@Model.serverCredentials.RefreshRate);

</script>

<script type="text/javascript">

    $(document).ready(function () {

        getStatus();

        if ('@Model.MineStat.ServerUp' == 'True') {

            $("#spbtnStartStop").addClass('fas fa-stop');
        }
        else {
            $("#spbtnStartStop").addClass('fas fa-play');
        }
    });

    function AfterSend(Data) {
        $("#spbtnStartStop").removeClass('fa-circle-notch');
        $("#spbtnStartStop").removeClass('fa-spin');

        if (Data.indexOf("SSH Error") != -1) {
            alert("SSH Error. Check config");
            $("#spbtnStartStop").addClass('fa-exclamation-circle');
        }
    }

    function BeforeSend() {
        $("#spbtnStartStop").removeClass('fa-stop');
        $("#spbtnStartStop").removeClass('fa-play');
        $("#spbtnStartStop").removeClass('fa-exclamation-circle');

        $("#spbtnStartStop").addClass('fa-circle-notch');
        $("#spbtnStartStop").addClass('fa-spin');
    }

    $("#btnStartStop").click(function () {

        BeforeSend();

        if (getStatusResult().MineStat.ServerUp == true) {

            $.ajax({
                url: '@Url.Action("Stop", "Home")',
                data: @Html.Raw(Json.Encode(Model.serverCredentials)),
            type: 'POST',
            cache: false,
                success: function (Data) {
                    AfterSend(Data);
            }
        });
        }
        else {
            $.ajax({
                url: '@Url.Action("Start", "Home")',
                data: @Html.Raw(Json.Encode(Model.serverCredentials)),
                type: 'POST',
                cache: false,
                success: function (Data) {
                    AfterSend(Data);
                }
            });
        }
    });

</script>

<script type="text/javascript">

    $("#sendRcon").click(function () {
            sendRcon();
    });

    $("#commandRcon").keyup(function (event) {
        if (event.keyCode == 13) {
            sendRcon();
            document.getElementById('commandRcon').value = '';
        }
    });

    function sendRcon() {
        var command = $("#commandRcon").val();

        if (command.length == 0) return;

        document.getElementById('commandRcon').value = '';

        if (command != "") {
            $("#Send").prop('disabled', true);

            $("#sendStatus").removeClass('fa-arrow-right');
            $("#sendStatus").addClass('fa-circle-notch');
            $("#sendStatus").addClass('fa-spin');

        };

                $.ajax({
                    url: '@Url.Action("CallRcon", "Home")',
                    type: 'POST',
                    data: {
                                commandRcon: command,
                                serverCredentials: @Html.Raw(Json.Encode(Model.serverCredentials)) 
                            },
                    cache: false,

                    success: function (Data) {

                        var datetime = getCurrentTime();
                        datetime += " -> ";
                        datetime += command;

                        $("#ulconsole").append('<li class="list-group-item list-group-item-success">' + datetime + '</li>');
                        clearOldLogs();

                        $("#sendStatus").addClass('fa-arrow-right');
                        $("#sendStatus").removeClass('fa-circle-notch');
                        $("#sendStatus").removeClass('fa-spin');

                        if (Data.indexOf("Unknown command") != -1) {
                            logError(Data);
                            clearOldLogs();
                            return;
                        }
                        else if (Data.indexOf("Usage") != -1) {
                            logWarning(Data);
                            return;
                        }
                        else if (Data.indexOf("Exception") != -1) {
                            logError(Data);
                            return;
                        }
                        else if (Data.indexOf("Error") != -1) {
                            logError(Data);
                            return;
                        }
                        else
                            logSuccess(Data);
                    }
                }).fail(
                    function () {
                        logError(Data);

                        $("#sendStatus").addClass('fa-arrow-right');
                        $("#sendStatus").removeClass('fa-circle-notch');
                        $("#sendStatus").removeClass('fa-spin');
                        }
                    );
        }
</script>
