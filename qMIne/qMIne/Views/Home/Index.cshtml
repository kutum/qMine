@model qMine.Models.StatusViewModel
@{
    ViewBag.Title = "qMine Console";
}

<div class="row content container-fluid" style="padding-top:10px">
    <div class="col-lg-8 console">

        <div class="card mb-3" >
            <div class="card-header">
                @*<img src="~/Content/img/commandblock.png" class="d-inline" />*@
                <img src="~/Content/img/Computer-icon.png" />
                <h6 class="card-title d-inline" style="padding-left:10px">RCON Console</h6>
            </div>
            <div id="console" class="card-body">
                <ul id="ulconsole" class="list-group" style="font-size:9pt; height:377px; overflow: auto;"></ul>
            </div>
        </div>


        <div class="input-group mb-3">

            <div class="input-group-prepend">
                <span class="input-group-text">type:</span>
            </div>

            <input type="text" id="commandRcon" class="form-control" />
            <div class="input-group-btn">
                @if (Model.MineStat.ServerUp)
                {
                    <button type="button" class="btn btn-dark" tabindex="-1" id="sendRcon"><span id="sendStatus" class="fas fa-arrow-right"></span> Send</button>
                }
                else
                {
                    <button type="button" class="btn btn-default" disabled tabindex="-1" id="sendRcon"><span id="sendStatus" class="fas fa-arrow-right"></span> Send</button>
                }
            </div>
        </div>

        <div class="checkbox card mb-3" style="display:inline-block; width:100%">

            <label style="padding-top: 1%;padding-left:10px">
                <span class="list-group-item-light">
                    <input type="checkbox" id="chkAutoScroll" checked="checked"> Auto scroll
                </span>
            </label>

            
            <button type="button" class="btn btn-outline-dark" tabindex="0" id="btnClearLog" style="float:right;"><span class="far fa-trash-alt"></span> Clear</button>
            
        </div>

    </div>


    <div class="col">
        <div class="row">
            <div class="card" style="min-width:300px; min-height:200px">
                <div class="card-header">


                   
                        <img class="d-inline"  id="redstoneLamp" src="~/Content/img/lamp_offline.png" />
                        <h6 class="card-title d-inline" id="Online">Getting status...</h6>
                    
                    @*<button id="refreshStatus" class="btn btn-outline-dark float-xl-right d-inline"><span class=" fas fa-sync"></span></button>*@

                    <button class="btn btn-sm" tabindex="0" id="btnStartStop" style="float:right;"><span id="spbtnStartStop" style="margin-right:10px" class="fas"></span>...</button>

                </div>
                <div class="card-body">

                    <h5>@ViewData["Error"]</h5>

                    @*<div id="alertmessage"></div>*@

                    <div class="input-group mb-1">
                        @Html.LabelFor(x => x.MineStat.Address, new { @class = "input-group-text control-label font-weight-bold" })
                        <span class="input-group-text" id="Address">@Model.MineStat.Address : @Model.MineStat.Port</span>
                    </div>



                        <div class="input-group mb-1">
                            @Html.LabelFor(x => x.MineStat.Version, new { @class = "input-group-text control-label font-weight-bold" })
                            <span class="input-group-text" id="Version">- @Model.MineStat.Version</span>
                        </div>

                        <div class="input-group">
                            <span class="input-group-text control-label font-weight-bold">Players:</span>
                            <span class="input-group-text" id="Players">@Model.MineStat.CurrentPlayers/@Model.MineStat.MaximumPlayers</span>
                        </div>

                </div>
            </div>
        </div>

        <div class="row" style="padding-top:15px; ">
            <div class="card" style="min-width:300px; min-height:200px">
                <div class="card-header">
                    <img src="~/Content/img/Enchanting_Table.png" class="d-inline" />
                    <h6 class="card-title d-inline" style="padding-left:10px">Info</h6>
                </div>
                <div class="card-body" style="font-size:10pt">
                     <a href="http://minecraft.gamepedia.com/Commands" class="list-group-item list-group-item-action list-group-item-info mb-3">
                        <img src="~/Content/img/Enchanted_Book.gif" style="max-height:32px; padding-right:10px" />  Commands
                     </a>
                     <a href="http://www.minecraftinfo.com/idlist.htm" class="list-group-item list-group-item-action list-group-item-info">
                        <img src="~/Content/img/Enchanted_Book.gif" style="max-height:32px; padding-right:10px" /> Items ID
                     </a>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/rconJS")

<script type="text/javascript">

    function getStatus() {
         $.ajax({
            url: '@Url.Action("GetStatus","Home")',
            type: 'GET',
            cache: false,
            success: function (Data) {
                refreshItems(Data);
            }
            });
    }

    $("#refreshStatus").click(function () {
        getStatus();
    });

    function refreshItems(Data) {
        document.getElementById('Address').childNodes[0].textContent = Data.Address + " : " + Data.Port;

        if (Data.ServerUp == true) {
            document.getElementById('Online').childNodes[0].textContent = "Online";
            document.getElementById('redstoneLamp').src = '@Url.Content("~/Content/img/lamp_online.png")';
            document.getElementById('Version').childNodes[0].textContent = Data.Version;
            document.getElementById('Players').childNodes[0].textContent = Data.CurrentPlayers + "/" + Data.MaximumPlayers;
            $("#spbtnStartStop").hasClass('fas fa-stop');
            document.getElementById('btnStartStop').childNodes[1].textContent = "Stop";
            $("#Send").prop('disabled', false);
        }
        else {
            document.getElementById('Online').childNodes[0].textContent = "Offline";
            document.getElementById('redstoneLamp').src = '@Url.Content("~/Content/img/lamp_offline.png")';
            document.getElementById('Version').childNodes[0].textContent = "-";
            document.getElementById('Players').childNodes[0].textContent = "-/-";
            $("#spbtnStartStop").hasClass('fas fa-play');
            document.getElementById('btnStartStop').childNodes[1].textContent = "Start";
            $("#Send").prop('disabled', true);
        }
        
       
    }

    function refreshStatus() {
         $.ajax({
            url: '@Url.Action("GetStatus","Home")',
            type: 'GET',
            cache: false,
            success: function (Data) {
                refreshItems(Data);
            }
            });
    }

    setInterval(refreshStatus, 5000);
</script>

<script type="text/javascript">

    $(document).ready(function () {

        getStatus();

        if ('@Model.MineStat.ServerUp' == 'True') {

            $("#spbtnStartStop").addClass('fas fa-stop');
        }
        else {
            $("#spbtnStartStop").addClass('fas fa-play');
        }
    });


    $("#btnStartStop").click(function () {

        if ('@Model.MineStat.ServerUp' == 'True') {

            $("#spbtnStartStop").removeClass('fa-stop');
            $("#spbtnStartStop").addClass('fa-circle-notch');
            $("#spbtnStartStop").addClass('fa-spin');

            $.ajax({
            url: '@Url.Action("Stop", "Home")',
            type: 'POST',
            cache: false,
                success: function (Data) {

                    if (Data.indexOf("SSH Error") != -1) {
                        alert("Empty SSH command. Configure it in Account");

                        $("#spbtnStartStop").removeClass('fa-circle-notch');
                        $("#spbtnStartStop").removeClass('fa-spin');
                        $("#spbtnStartStop").addClass('fa-stop');
                    }
                    else {
                        $("#spbtnStartStop").removeClass('fa-circle-notch');
                        $("#spbtnStartStop").removeClass('fa-spin');
                        $("#spbtnStartStop").addClass('fa-play');
                        document.getElementById('btnStartStop').childNodes[1].textContent = "Start";
                    }

                    getStatus();
            }
        });

        }
        else {

            $("#spbtnStartStop").removeClass('fa-play');
            $("#spbtnStartStop").addClass('fa-circle-notch');
            $("#spbtnStartStop").addClass('fa-spin');

            $.ajax({
                url: '@Url.Action("Start", "Home")',
                type: 'POST',
                cache: false,
                success: function (Data) {

                    if (Data.indexOf("SSH Error") != -1) {

                        $("#spbtnStartStop").removeClass('fa-circle-notch');
                        $("#spbtnStartStop").removeClass('fa-spin');
                        $("#spbtnStartStop").addClass('fa-play');
                    }
                    else {
                        
                        $("#spbtnStartStop").removeClass('fa-circle-notch');
                        $("#spbtnStartStop").removeClass('fa-spin');
                        $("#spbtnStartStop").addClass('fa-stop');

                        document.getElementById('btnStartStop').childNodes[1].textContent = "Stop";
                    }

                    getStatus();
                }
            });
        }
    });

</script>

<script type="text/javascript">

    $("#sendRcon").click(function () {
            sendRcon();
    });

    $("#commandRcon").keyup(function (event) {
        if (event.keyCode == 13) {
            sendRcon();
            document.getElementById('commandRcon').value = '';
        }
    });

    function sendRcon() {
        var command = $("#commandRcon").val();

        

        if (@Model.MineStat.ServerUp == 'false') return;
        if (command.length == 0) return;
        
        
        document.getElementById('commandRcon').value = '';   

        if (command != "") {
            $("#Send").prop('disabled', true);

            //$("#commandRcon").prop('disabled', true);

            $("#sendStatus").removeClass('fa-arrow-right');
            $("#sendStatus").addClass('fa-circle-notch');
            $("#sendStatus").addClass('fa-spin');
            
        };

                $.ajax({
                    url: '@Url.Action("CallRcon", "Home")',
                    type: 'POST',
                    data: { commandRcon: command },
                    cache: false,

                    success: function (Data) {

                        var datetime = getCurrentTime();
                        datetime += " -> ";
                        datetime += command;

                        $("#ulconsole").append('<li class="list-group-item list-group-item-success">' + datetime + '</li>');
                        clearOldLogs();

                        $("#sendStatus").addClass('fa-arrow-right');
                        $("#sendStatus").removeClass('fa-circle-notch');
                        $("#sendStatus").removeClass('fa-spin');

                        //$("#commandRcon").prop('disabled', false);

                        if (Data.indexOf("Unknown command") != -1) {
                            logError(Data);
                            clearOldLogs();
                            return;
                        }
                        else if (Data.indexOf("Usage") != -1) {
                            logWarning(Data);
                            return;
                        }
                        else if (Data.indexOf("Exception") != -1) {
                            logError(Data);
                            return;
                        }
                        else if (Data.indexOf("Error") != -1) {
                            logError(Data);
                            return;
                        }
                        else
                            logSuccess(Data);
                    }
                }).fail(
                    function () {
                        logError(Data);

                        //$("#commandRcon").prop('disabled', false);

                        $("#sendStatus").addClass('fa-arrow-right');
                        $("#sendStatus").removeClass('fa-circle-notch');
                        $("#sendStatus").removeClass('fa-spin');
                        }
                    );
    }
</script>