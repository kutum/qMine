@model qMine.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change password";
}

<div class="row content container-fluid" style="padding-top:10px">
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title">@ViewBag.Title</h5>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()



                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            @Html.LabelFor(m => m.OldPassword, new { @class = "input-group-text control-label " })
                        </div>
                        @Html.TextBoxFor(m => m.OldPassword, new { @class = "form-control", type = "password" })

                    </div>

                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            @Html.LabelFor(m => m.NewPassword, new { @class = "input-group-text control-label " })
                        </div>
                        @Html.TextBoxFor(m => m.NewPassword, new { @class = "form-control", type = "password" })

                    </div>

                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "input-group-text control-label " })
                        </div>
                        @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", type = "password" })

                    </div>

                    @Html.ValidationSummary("", new { @class = "text-danger" })

                    <input type="submit" value="Change Password" class="btn btn-dark" style="float:right" />

                }
            </div>
        </div>
    </div>
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
